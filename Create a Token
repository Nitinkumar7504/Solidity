// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract CreateToken {
    string public tokenName;
    string public tokenSymbol;
    uint256 public tokenTotalSupply;

    mapping(address => uint256) public addressBalances;

    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) {
        tokenName = _name;
        tokenSymbol = _symbol;
        tokenTotalSupply = _initialSupply;
        addressBalances[msg.sender] = _initialSupply;
    }

    function mint(address _recipient, uint256 _amount) public {
        require(_recipient != address(0), "Invalid recipient address");
        tokenTotalSupply += _amount;
        addressBalances[_recipient] += _amount;
    }

    function burn(uint256 _amount) public {
        require(addressBalances[msg.sender] >= _amount, "Not enough balance to burn");
        tokenTotalSupply -= _amount;
        addressBalances[msg.sender] -= _amount;
    }
}
